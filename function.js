//Функция для проверки длины строки
const isLengthString = function (someString, someNumber) {
  if (someString.length <= someNumber) {
    return true;
  }
  return false;
};

isLengthString('проверяемая строка', 20);
//Тесты
// Cтрока короче 20 символов
// имяФункции('проверяемая строка', 20); // true
// Длина строки ровно 18 символов
// имяФункции('проверяемая строка', 18); // true
// Строка длиннее 10 символов
// имяФункции('проверяемая строка', 10); // false
//----------------------------------------------------------------------------------------------
//Функция для проверки, является ли строка палиндромом
const isPalnidrom = function (someString) {
  const lowSomeString = someString
    .toLowerCase()
    .replaceAll(' ', '');
  let reverseSomeString = '';
  for (let i = lowSomeString.length - 1; i >= 0; i--) {
    reverseSomeString += lowSomeString.at(i);
  }
  return lowSomeString === reverseSomeString;
};
isPalnidrom('привет как дела');
//Тесты
// Строка является палиндромом
// имяФункции('топот'); // true
// Несмотря на разный регистр, тоже палиндром
// имяФункции('ДовОд'); // true
// Это не палиндром
// имяФункции('Кекс');  // false
// Это палиндром
//имяФункции('Лёша на полке клопа нашёл '); // true
//----------------------------------------------------------------------------------------------
//Функция, которая принимает строку, извлекает содержащиеся в ней цифры от 0 до 9
//и возвращает их в виде целого положительного числа.
//Если в строке нет ни одной цифры, функция должна вернуть NaN
const extractNumber = function (string) {
  if (typeof string === 'number') {
    return string;
  }
  let result = '';
  for (let i = 0; i < string.length; i++) {
    if (!Number.isNaN(parseInt(string.at(i), 10))) {
      result += string.at(i);
    }
  }
  return parseInt(result, 10);
};
extractNumber('сейчас 2023 год');
//Тесты
//имяФункции('2023 год');             2023
//имяФункции('ECMAScript 2022');      2022
//имяФункции('1 кефир, 0.5 батона');  105
//имяФункции('агент 007');            7
//имяФункции('а я томат');            NaN
//имяФункции(2023);  2023
//имяФункции(-1);    1
//имяФункции(1.5);   15
//----------------------------------------------------------------------------------------------
//Функция, которая принимает три параметра: исходную строку, минимальную длину и строку с добавочными символами
//И возвращает исходную строку, дополненную указанными символами до заданной длины
//Символы добавляются в начало строки. Если исходная строка превышает заданную длину, она не должна обрезаться
//Если «добивка» слишком длинная, она обрезается с конца
const myPadStart = function (string, minLength, pad) {
  const actualPad = minLength - string.length;
  if (actualPad <= 0) {
    return string;
  }
  const tempPad = pad.slice(0, actualPad % pad.length);
  const tempRepeat = pad.repeat(actualPad / pad.length);
  return tempPad + tempRepeat + string;
};
//Тесты
// Добавочный символ использован один раз
//имяФункции('1', 2, '0');      // '01'
// Добавочный символ использован три раза
//имяФункции('1', 4, '0');      // '0001'
// Добавочные символы обрезаны с конца
//имяФункции('q', 4, 'werty');  // 'werq'
// Добавочные символы использованы полтора раза
//имяФункции('q', 4, 'we');     // 'wweq'
// Добавочные символы не использованы, исходная строка не изменена
//имяФункции('qwerty', 4, '0'); // 'qwerty'

